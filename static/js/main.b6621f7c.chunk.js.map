{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/OtherMessage.jsx","components/Chatfeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","OtherMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","console","log","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Login","setUsername","password","setPassword","error","setError","e","a","authObject","process","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6621f7c.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\n\r\nconst MyMessage = ({ message }) => {\r\n    if (message.attachments && message.attachments.length > 0) {\r\n      return (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ float: 'right' }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#000000' }}>\r\n        {message.text}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default MyMessage;\r\n  ","import React from \"react\";\r\n\r\nconst OtherMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  \r\n    return (\r\n      <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n            className=\"message-avatar\"\r\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          />\r\n        )}\r\n        {message.attachments && message.attachments.length > 0\r\n          ? (\r\n            <img\r\n              src={message.attachments[0].file}\r\n              alt=\"message-attachment\"\r\n              className=\"message-image\"\r\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n            />\r\n          )\r\n          : (\r\n            <div className=\"message\" style={{ float: 'left', color: \"white\", backgroundColor: '#000000', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n              {message.text}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default OtherMessage;\r\n  ","import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport OtherMessage from \"./OtherMessage\";\r\n\r\n\r\nconst ChatFeed = (props)=>{\r\n    const {chats,activeChat,userName,messages} = props;\r\n    const chat = chats && chats[activeChat];\r\n    console.log(chat,userName,messages);\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n        <div\r\n          key={`read_${index}`}\r\n          className=\"read-receipt\"\r\n          style={{\r\n            float: isMyMessage ? 'right' : 'left',\r\n            backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n          }}\r\n        />\r\n      ));\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n    \r\n        return keys.map((key, index) => {\r\n          const message = messages[key];\r\n          const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n          const isMyMessage = userName === message.sender.username;\r\n    \r\n          return (\r\n            <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n              <div className=\"message-block\">\r\n                {isMyMessage\r\n                  ? <MyMessage message={message} />\r\n                  : <OtherMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n              </div>\r\n              <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                {renderReadReceipts(message, isMyMessage)}\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n      };\r\n    \r\n      if (!chat) return <div />;\r\n    \r\n      return (\r\n        <div className=\"chat-feed\">\r\n          <div className=\"chat-title-container\">\r\n            <div className=\"chat-title\">{chat?.title}</div>\r\n            <div className=\"chat-subtitle\">\r\n              {chat.people.map((person) => ` ${person.person.username}`)}\r\n            </div>\r\n          </div>\r\n          {renderMessages()}\r\n          <div style={{ height: '100px' }} />\r\n          <div className=\"message-form-container\">\r\n            <MessageForm {...props} chatId={activeChat} />\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default ChatFeed;","import React,{ useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = process.env.REACT_APP_API\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Incorrect Credentials! Ask admin for the credential');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Groupify</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Get Started</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {ChatEngine} from \"react-chat-engine\";\r\nimport ChatFeed from \"./components/Chatfeed\";\r\nimport \"./App.css\";\r\nimport LoginForm from './components/LoginForm';\r\n\r\nconst projectID = process.env.REACT_APP_API\r\n\r\nconst App = ()=>{\r\n    if (!localStorage.getItem('username')) return <LoginForm />;\r\n    \r\n    return (\r\n        <ChatEngine\r\n          height=\"100vh\"\r\n          projectID={projectID}\r\n          userName={localStorage.getItem('username')}\r\n          userSecret={localStorage.getItem('password')}\r\n          renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n          onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n        />\r\n      );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}